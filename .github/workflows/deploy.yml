# =======================================
# deploy.yml - Main branch deploy only
# =======================================
name: Deploy

on:
  push:
    branches: ["main"]

env:
  GCP_REGION: europe-west3
  GCP_PROJECT_ID: openbanking-api-458712
  GCP_SERVICE: openbanking-api
  GCP_REPOSITORY: openbanking-api
  IMAGE_PATH: europe-west3-docker.pkg.dev/openbanking-api-458712/openbanking-api/openbanking-api
  API_URL: https://openbanking-api-826260723607.europe-west3.run.app
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: temurin

permissions:
  contents: read
  id-token: write

jobs:
  setup:
    name: Setup & Authenticate
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Google Cloud credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Set unique image tag (timestamp + short SHA)
        id: vars
        run: echo "tag=$(date +%s)-$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  build:
    name: Build JAR & Docker Image
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Build JAR
        run: ./gradlew clean bootJar

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ env.IMAGE_PATH }}:${{ needs.setup.outputs.tag }} .
          docker push ${{ env.IMAGE_PATH }}:${{ needs.setup.outputs.tag }}

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: [setup, build]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Google Cloud credentials
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.GCP_SERVICE }}
          image: ${{ env.IMAGE_PATH }}:${{ needs.setup.outputs.tag }}
          region: ${{ env.GCP_REGION }}

      - name: Allow unauthenticated access
        run: |
          gcloud run services add-iam-policy-binding ${{ env.GCP_SERVICE }} \
            --region=${{ env.GCP_REGION }} \
            --member=allUsers \
            --role=roles/run.invoker

      - name: Deployment Complete
        run: echo "âœ… Successfully deployed to Cloud Run -> ${{ env.API_URL }}"

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [setup, build, deploy]
    steps:
      - uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: deploy-${{ needs.setup.outputs.tag }}
          name: Cloud Run Deployment - ${{ needs.setup.outputs.tag }}
          body: |
            âœ… Successfully deployed to Cloud Run!

            ðŸ”— [View Live Service](${{ env.API_URL }})

            ðŸ“¦ Docker Image: `${{ env.IMAGE_PATH }}:${{ needs.setup.outputs.tag }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
