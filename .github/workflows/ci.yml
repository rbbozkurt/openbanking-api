name: Kotlin CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build and Test
        run: ./gradlew clean build

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test/index.html

  lint:
    name: Lint (ktlint)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run ktlint
        run: ./gradlew ktlintCheck

  detekt:
    name: Static Analysis (Detekt)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Run detekt
        run: ./gradlew detekt

      - name: Upload Detekt SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: build/reports/detekt/detekt.sarif

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t openbanking-api:latest .
