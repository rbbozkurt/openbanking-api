name: Quality Check & Build

on:
  push:
    branches: ["**"]

permissions:
  contents: read

env:
  JAVA_VERSION: 17
  DISTRIBUTION: temurin

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Generate Gradle cache key
        id: cache-key
        run: echo "key=${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}" >> $GITHUB_OUTPUT

  build:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ needs.setup.outputs.gradle-cache-key }}
          restore-keys: ${{ runner.os }}-gradle

      - run: chmod +x ./gradlew
      - run: ./gradlew clean build

  lint:
    name: Lint (ktlint)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - run: ./gradlew ktlintCheck

  detekt:
    name: Static Analysis (Detekt)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - run: ./gradlew detekt
